const express = require("express");
const router = express.Router();
const userModel = require("../models/userModel");
const { isLoggedIn } = require("../middleware/authMiddliware");
const transactionModel = require("../models/transactionModel");

const PDFDocument = require("pdfkit");
const fs = require("fs");


router.get("/download", isLoggedIn, async (req, res) => {
  try {
    const user = await userModel.findOne({ email: req.user.email });
    const transactions = await transactionModel.find({ email: req.user.email });
    let income = 0,
      expense = 0;
    transactions.forEach((txn) => {
      if (txn.type === "income") {
        income += txn.amount;
      } else {
        expense += txn.amount;
      }
    });
    const balance = income - expense;
    const doc = new PDFDocument();
    const fileName = `Expense_Report_${user.userName}_${Date.now()}.pdf`;

    res.setHeader("Content-disposition", `attachment; filename="${fileName}"`);
    res.setHeader("Content-type", "application/pdf");

    doc.pipe(res);
    doc.rect(0, 0, doc.page.width, doc.page.height).fill("#000"); // black background

    // Title - Centered, cyan color
    doc
      .fontSize(24)
      .fillColor("cyan")
      .text("Expense Report", { align: "center" });

    doc.moveDown(1);

    // User info - Left aligned with some spacing
    doc.fontSize(14).fillColor("cyan").text(`User: ${user.userName}`);

    doc.fontSize(14).fillColor("cyan").text(`Email: ${user.email}`);

    doc.moveDown(1);

    // Financial summary with better spacing and color
    doc
      .fontSize(16)
      .fillColor("orange")
      .text(`Total Income: ₹${income}`, { continued: true })
      .fillColor("orange")
      .text(`     Total Expense: ₹${expense}`, { continued: true })
      .fillColor("orange")
      .text(`     Balance: ₹${balance}`);

    doc.moveDown(1);

    // Transactions header
    doc.fontSize(16).fillColor("cyan").text("Transactions:");

    doc.moveDown(0.5);

    // List transactions with uniform style and indentation
    transactions.forEach((txn, i) => {
      doc
        .fontSize(12)
        .fillColor("white")
        .text(
          `${i + 1}. ₹${txn.amount} - ${txn.type.toUpperCase()} - ${
            txn.category
          } - ${txn.date.toDateString()}`,
          { indent: 20 }
        );
    });

    doc.moveDown(6);

    doc
      .fontSize(12)
      .fillColor("orange")
      .text(`Generated by: Expense Tracker App`, { align: "center" });

    doc
      .fontSize(12)
      .fillColor("red")
      .text(
        `This application is designed by Samrat Ojha. All rights reserved.`,
        { align: "center" }
      );

    doc.end();
  } catch (error) {
    console.error("PDF Download Error:", error);
    res.send("Failed to generate PDF.");
  }
});


module.exports = router;